name: Development CI

on:
  push:
    branches:
      - development

env:
  CI: true
  HEADLESS: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_BRANCH: ${{ github.ref }}
  GITHUB_COMMIT: ${{ github.sha }}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [10.x, 12.x, 13.x, 14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@v0.0.6
      - name: npm install
        run: |
          npm install
      - name: npm run build
        run: |
          npm run build
      - name: npm test
        run: |
          npm test
      - name: code coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test/coverage/lcov.info
      - name: npm run e2e
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates libnss3-tools xvfb
          sudo mkdir -pv /usr/local/share/ca-certificates
          sudo cp -v ssl/fritz.box.crt /usr/local/share/ca-certificates/
          sudo chmod 644 /usr/local/share/ca-certificates/*
          sudo update-ca-certificates
          mkdir -pv ${HOME}/.pki/nssdb
          echo > .password
          certutil -N -d sql:${HOME}/.pki/nssdb -f .password
          certutil -A -d sql:${HOME}/.pki/nssdb -f .password -t "C,," -n "fritz.box" -i ssl/fritz.box.crt
          rm -rf .password
          xvfb-run --auto-servernum -- bash -c "npm run e2e"
        env:
          PACKAGE_JSON: ${{ steps.projectinfo.outputs.context }}
      - name: npm run e2e
        if: matrix.os == 'macos-latest' && matrix.node-version == '14.x'
        run: |
          sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.Keychain ssl/fritz.box.crt
          npm run e2e
        env:
          PACKAGE_JSON: ${{ steps.projectinfo.outputs.context }}
      - name: npm run e2e
        if: matrix.os == 'windows-latest' && matrix.node-version == '14.x'
        run: |
          certutil -addstore -f "ROOT" ssl\fritz.box.crt
          npm run e2e
        env:
          PACKAGE_JSON: ${{ steps.projectinfo.outputs.context }}
      - name: archive e2e screenshots
        uses: actions/upload-artifact@v1
        if: matrix.node-version == '14.x'
        with:
          name: Screenshots Development ${{ matrix.os }} ${{ matrix.node-version }}
          path: e2e/screenshots
