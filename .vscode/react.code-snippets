{
	// Place your ts-covid19-pure.git workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  "qwer": {
    "prefix": "qwer",
    "body": [
      "import React, { FunctionComponent, memo, useContext, useEffect, useState } from 'react';",
      "import { string as IsString } from 'prop-types';",
      "",
      "import { Context } from 'context';",
      "",
      "type Props = {",
      "  prop?: string;",
      "};",
      "",
      "export const $1: FunctionComponent<Props> = ({ prop }) => {",
      "  const { theme } = useContext(Context);",
      "  const [state, setState] = useState(false);",
      "",
      "  useEffect(() => {",
      "    setState(true);",
      "    return () => {",
      "      setState(false);",
      "    };",
      "  }, [setState]);",
      "",
      "  return (",
      "    <>",
      "      <div>",
      "        {theme} - {prop} - {state ? 'mounted' : 'not mounted'}",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "$1.displayName = '$1';",
      "",
      "$1.defaultProps = {",
      "  prop: 'default',",
      "};",
      "",
      "$1.propTypes = {",
      "  prop: IsString,",
      "};",
      "",
      "export default memo($1);",
      ""
    ],
    "description": "React FunctionComponent with Props, prop-types, memo, useContent, useEffect and useState"
  }
}
